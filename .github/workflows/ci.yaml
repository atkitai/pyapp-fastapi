name: Test and Auto-Merge FastAPI API

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run tests
        run: pytest app/tests/

  auto-merge:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ success() }}
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Enable auto-merge
        uses: actions/github-script@v6
        with:
          script: |
            const pr = github.context.payload.pull_request;
            if (!pr) {
              throw new Error("No pull request found in context.");
            }
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'squash',
            });

      - name: Add Success Comment
        uses: actions/github-script@v6
        with:
          script: |
            const pr = github.context.payload.pull_request;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: '‚úÖ Code passed all test cases and was auto-merged.',
            });

  create-issue-if-failed:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    permissions:
      issues: write
    steps:
      - name: Create issue on failed tests
        uses: actions/github-script@v6
        with:
          script: |
            const pr = github.context.payload.pull_request;
            const title = `üö® Pull Request #${pr.number} Failed Tests`;
            const body = `Tests failed for pull request #${pr.number}. Please check the test results.`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
            });

      - name: Create Comment
        uses: actions/github-script@v6
        with:
          script: |
            const pr = github.context.payload.pull_request;
            const comment = `‚ùå Tests failed for pull request #${pr.number}. Please fix the tests.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment,
            });
